name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Compose
      uses: docker/setup-buildx-action@v1

    - name: Run services
      run: |
        # Create a temporary env file from secrets for docker-compose to use
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}" >> .env
        echo "MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}" >> .env
        echo "AIRFLOW_UID=50000" >> .env

        # Start all services in the background
        docker-compose -f docker-compose.yml --env-file .env up -d

    - name: Wait for services to be healthy
      run: |
        # Give services time to start up. A more robust solution might use a wait-for-it script.
        sleep 60

    - name: Verify containers are running
      run: docker-compose ps

    - name: Run a simple test (e.g., scrape)
      run: |
        # This is an example of a test you could run.
        # It executes the scraper script inside the airflow-webserver container.
        docker-compose exec -T airflow-webserver python /opt/airflow/scraper/scrape_boats.py --help

    - name: Stop services
      if: always() # Ensure services are stopped even if tests fail
      run: docker-compose down

  publish-to-ghcr:
    name: Publish Docker image to GHCR
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest